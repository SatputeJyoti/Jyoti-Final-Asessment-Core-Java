<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="POOLW42SLPC5699" failures="0" tests="7" name="xlogist_TestCase" time="245.692" errors="0" timestamp="13 Dec 2022 16:16:15 GMT">
  <testcase classname="TestCase.xlogist_TestCase" name="@BeforeMethod setup" time="42.062">
    <failure type="org.openqa.selenium.WebDriverException" message="java.net.SocketException: Connection reset
Build info: version: &amp;apos;3.4.0&amp;apos;, revision: &amp;apos;unknown&amp;apos;, time: &amp;apos;unknown&amp;apos;
System info: host: &amp;apos;POOLW42SLPC5699&amp;apos;, ip: &amp;apos;192.168.115.142&amp;apos;, os.name: &amp;apos;Windows 11&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;19&amp;apos;
Driver info: driver.version: RemoteWebDriver">
      <![CDATA[org.openqa.selenium.WebDriverException: java.net.SocketException: Connection reset
Build info: version: '3.4.0', revision: 'unknown', time: 'unknown'
System info: host: 'POOLW42SLPC5699', ip: '192.168.115.142', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '19'
Driver info: driver.version: RemoteWebDriver
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:91)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:637)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:364)
at TestCase.xlogist_TestCase.setup(xlogist_TestCase.java:50)
Caused by: java.net.SocketException: Connection reset
at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:313)
at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:340)
at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:789)
at java.base/java.net.Socket$SocketInputStream.read(Socket.java:1025)
at org.apache.http.impl.conn.LoggingInputStream.read(LoggingInputStream.java:84)
at org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:137)
at org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:153)
at org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:282)
at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138)
at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)
at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)
at org.apache.http.impl.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:163)
at org.apache.http.impl.conn.CPoolProxy.receiveResponseHeader(CPoolProxy.java:165)
at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)
at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)
at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:272)
at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:111)
at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:72)
at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
at org.openqa.selenium.remote.internal.ApacheHttpClient.fallBackExecute(ApacheHttpClient.java:139)
at org.openqa.selenium.remote.internal.ApacheHttpClient.execute(ApacheHttpClient.java:87)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:161)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:82)
... 29 more
... Removed 26 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="TestCase.xlogist_TestCase" name="@AfterMethod StopTest" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod StopTest -->
  <testcase classname="TestCase.xlogist_TestCase" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="TestCase.xlogist_TestCase" name="@AfterMethod StopTest" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod StopTest -->
  <testcase classname="TestCase.xlogist_TestCase" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="TestCase.xlogist_TestCase" name="@AfterMethod StopTest" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod StopTest -->
  <testcase classname="TestCase.xlogist_TestCase" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="TestCase.xlogist_TestCase" name="@AfterMethod StopTest" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod StopTest -->
  <testcase classname="TestCase.xlogist_TestCase" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="TestCase.xlogist_TestCase" name="@AfterMethod StopTest" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod StopTest -->
  <testcase classname="TestCase.xlogist_TestCase" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="TestCase.xlogist_TestCase" name="@AfterMethod StopTest" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod StopTest -->
  <testcase classname="TestCase.xlogist_TestCase" name="@AfterClass stopReport" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass stopReport -->
  <testcase classname="TestCase.xlogist_TestCase" name="valid" time="110.803"/>
  <testcase classname="TestCase.xlogist_TestCase" name="invalid" time="0.0">
    <skipped/>
  </testcase> <!-- invalid -->
  <testcase classname="TestCase.xlogist_TestCase" name="Blank" time="0.0">
    <skipped/>
  </testcase> <!-- Blank -->
  <testcase classname="TestCase.xlogist_TestCase" name="asstringwithspaces" time="0.0">
    <skipped/>
  </testcase> <!-- asstringwithspaces -->
  <testcase classname="TestCase.xlogist_TestCase" name="asinterger" time="0.0">
    <skipped/>
  </testcase> <!-- asinterger -->
  <testcase classname="TestCase.xlogist_TestCase" name="specialsymbol" time="0.0">
    <skipped/>
  </testcase> <!-- specialsymbol -->
  <testcase classname="TestCase.xlogist_TestCase" name="Maximumchar" time="0.0">
    <skipped/>
  </testcase> <!-- Maximumchar -->
</testsuite> <!-- xlogist_TestCase -->
